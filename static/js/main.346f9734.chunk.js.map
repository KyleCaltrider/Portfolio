{"version":3,"sources":["icons/JS_logo.png","icons/Node_logo.png","icons/React_logo.png","icons/Python_logo.png","icons/Docker_logo.png","icons/microscope-icon.svg","icons/about-icon.svg","icons/works-icon.svg","icons/Facial-recognition-photo.png","icons/react-etsy-photo.png","icons/parent2pi-photo.png","Resume Kyle Caltrider.pdf","CV Kyle Caltrider.pdf","WebWorker.js","CellWorker.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","WebWorker","worker","Object","classCallCheck","this","code","toString","blob","Blob","Worker","URL","createObjectURL","CellWorker","self","addEventListener","culture","circ","Math","PI","_culture$data","data","cells","food","uv","canvasWidth","canvasHeight","foodCycle","foodAmount","cellsLimit","updates","offspring","newCells","map","cell","ic","cyclesAlive","repCycle","moveCell","width","height","random","heading","magnitude","floor","k","speed","scale","Fx","cos","Fy","sin","x","position","y","energy","findNucleus","rgb","color","c","nucleusColor","forEach","mate","im","x1","x2","y1","y2","length","sqrt","pow","abs","newCell","push","filter","concat","postMessage","works","name","description","react_default","a","createElement","href","target","rel","live","image","src","faceRecognitionPhoto","alt","parent2piPhoto","reactEtsyPhoto","strengthsIcons","i","jsLogo","label","reactLogo","nodeLogo","pythonLogo","dockerLogo","App","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","canvas","ctx","cellCount","simSpeed","hovers","bannerArrow","actives","nav","updateSimulation","bind","assertThisInitialized","updateCanvas","handleCanvasClick","toggleHover","toggleActive","initCanvas","clearInterval","timer","terminate","_this2","refs","getContext","setState","setInterval","seedCells","_this$state","clearRect","startX","startY","gapWidth","min","strokeStyle","beginPath","moveTo","lineTo","stroke","o","da","db","arc","fillStyle","fill","closePath","nucleus","quantity","toConsumableArray","Array","_","id","join","e","ne","nativeEvent","pos","offsetX","offsetY","key","_this3","className","onMouseEnter","onMouseLeave","onClick","scroller","scrollTo","duration","delay","smooth","modules","icon","work","resume","download","cv","simIcon","scroll","scrollToTop","aboutIcon","worksIcon","ref","window","innerWidth","innerHeight","React","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.346f9734.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/JS_logo.ee656fd6.png\";","module.exports = __webpack_public_path__ + \"static/media/Node_logo.c46b49af.png\";","module.exports = __webpack_public_path__ + \"static/media/React_logo.644fec00.png\";","module.exports = __webpack_public_path__ + \"static/media/Python_logo.ee1514c5.png\";","module.exports = __webpack_public_path__ + \"static/media/Docker_logo.ebc8a1fb.png\";","module.exports = __webpack_public_path__ + \"static/media/microscope-icon.e999dac0.svg\";","module.exports = __webpack_public_path__ + \"static/media/about-icon.9e8cf45e.svg\";","module.exports = __webpack_public_path__ + \"static/media/works-icon.4e5fdff4.svg\";","module.exports = __webpack_public_path__ + \"static/media/Facial-recognition-photo.ccfeb4be.png\";","module.exports = __webpack_public_path__ + \"static/media/react-etsy-photo.65bf227b.png\";","module.exports = __webpack_public_path__ + \"static/media/parent2pi-photo.c1751038.png\";","module.exports = __webpack_public_path__ + \"static/media/Resume Kyle Caltrider.71783f07.pdf\";","module.exports = __webpack_public_path__ + \"static/media/CV Kyle Caltrider.fa8dbb00.pdf\";","class WebWorker {\n    constructor(worker) {\n        const code = worker.toString(),\n              blob = new Blob([\"(\" + code + \")()\"]);\n        return new Worker(URL.createObjectURL(blob));\n    }\n}\n\nexport default WebWorker;","export default () => {\n    self.addEventListener('message', culture => {   // eslint-disable-line no-restricted-globals\n        if (!culture) return;\n\n        const circ = 2 * Math.PI;\n\n        function distance(x1, x2, y1, y2) {\n            return Math.sqrt(Math.pow(Math.abs(x1 - x2), 2) + Math.pow(Math.abs(y1 - y2), 2))\n        }\n\n        function findNucleus(cell) {\n            const magnitude = -1 * cell.scale / 3,\n                  Fx = magnitude * Math.cos(cell.heading),\n                  Fy = magnitude * Math.sin(cell.heading),\n                  x = Math.floor(cell.position[0] + Fx),\n                  y = Math.floor(cell.position[1] - Fy);\n            return [x, y];\n        }\n\n        function moveCell(cell, width, height) {\n            if (Math.random() < (0.5)) cell.heading += (Math.random() * (0.8) - (0.4));\n            if (cell.heading >= circ) cell.heading -= circ;\n            if (cell.heading < 0) cell.heading = circ + cell.heading;\n            let magnitude = Math.floor(Math.random() * 8),\n            k         = 2 * cell.speed / cell.scale,\n            Fx        = magnitude * Math.cos(cell.heading),\n            Fy        = magnitude * Math.sin(cell.heading),\n            x         = Math.floor(cell.position[0] + (Fx * k)),\n            y         = Math.floor(cell.position[1] - (Fy * k));\n            if ( x>20 && y>20 && x<(width-20) && y<(height-20) ) {\n                cell[\"position\"][0] = x;\n                cell[\"position\"][1] = y;\n                cell.energy -= (magnitude / 10);\n                cell.scale -= (magnitude / 100);\n                if (cell.scale < 1) cell.scale = 1;\n            }\n            else {\n                cell.heading += Math.PI;\n                if (cell.heading > circ) cell.heading -= circ;\n                moveCell(cell, width, height);\n            }\n\n            return cell;\n        }\n\n\n\n\n\n\n        let { cells, food, uv, canvasWidth, canvasHeight, foodCycle, foodAmount, cellsLimit } = culture.data;\n        let updates = {},\n            offspring = [];\n        if (foodCycle === 0) {\n            food = foodAmount;\n            foodCycle = 30;\n        }\n\n        let newCells = cells.map( (cell, ic) => {\n            // Move Cell\n            cell.cyclesAlive++;\n            cell.repCycle++;\n            cell = moveCell(cell, canvasWidth, canvasHeight);\n\n            // Calculate nucleus position\n            cell['nucleus'] = findNucleus(cell);\n            // Let Cell Eat\n            if (Math.random() < food / 100) {\n                cell.energy += 1;\n                cell.scale += 0.1;\n                if (cell.scale > 10) cell.scale = 10;\n                if (cell.energy > 100) cell.energy = 100;\n                food -= 0.1;\n            }\n\n            // Subject Cell To Mutations\n            if (Math.random() < uv / 20000) {\n                const rgb = Math.floor(Math.random() * 3);\n                cell['color'][rgb] = Math.floor(Math.random() * 256);\n                cell.color = cell.color.map(c => {\n                    if (c > 255) c = 255;\n                    return c;\n                });\n            }\n            if (Math.random() < uv / 20000) {\n                const rgb = Math.floor(Math.random() * 3);\n                cell['nucleusColor'][rgb] = Math.floor(Math.random() * 256);\n                cell.nucleusColor = cell.nucleusColor.map(c => {\n                    if (c > 255) c = 255;\n                    return c;\n                });\n            }\n\n            // Let Cells Reproduce\n            cells.forEach((mate , im) => {\n                if (cells.length < cellsLimit &&\n                    im !== ic &&\n                    cell.repCycle > 100 &&\n                    mate.repCycle > 100 &&\n                    cell.energy > 50 &&\n                    mate.energy > 50 &&\n                    Math.random() > 0.5) {\n                    const d = distance(cell.position[0], mate.position[0], cell.position[1], mate.position[1]);\n                    if (d < (2*(cell.scale + mate.scale) + 5)) {\n                        const newCell = {\n                            energy: 50,\n                            speed: Math.random() > 0.5 ? cell.speed : mate.speed,\n                            scale: 5,\n                            color: Math.random() > 0.5 ? cell.color : mate.color,\n                            nucleusColor: Math.random() > 0.5 ? cell.nucleusColor : mate.nucleusColor,\n                            cyclesAlive: 0,\n                            repCycle: 0,\n                            position: [Math.abs((cell.position[0] + mate.position[0]) / 2),\n                                       Math.abs((cell.position[1] + mate.position[1]) / 2)],\n                            heading: Math.random() * circ\n                        }\n                        cell.energy -= 30;\n                        mate.energy -= 30;\n                        cell.repCycle = 0;\n                        mate.repCycle = 0;\n                        newCell['nucleus'] = findNucleus(newCell);\n                        offspring.push(newCell);\n                    }\n                }\n            })\n            \n            return cell;\n        })\n        newCells = newCells.filter(cell => cell.energy > 0 && cell.cyclesAlive < 800);\n        newCells = newCells.concat(offspring);\n        updates[\"cells\"] = newCells;\n        updates[\"food\"] = food;\n        updates[\"foodCycle\"] = foodCycle - 1;\n        return postMessage(updates);\n    });\n};","// Module Imports\nimport React from 'react';\nimport { Element, scroller, animateScroll as scroll } from 'react-scroll';\nimport './App.css';\n\n// Web Worker Imports\nimport WebWorker from './WebWorker';\nimport CellWorker from './CellWorker';\n\n\n// Image & Icon Imports\nimport jsLogo from './icons/JS_logo.png';\nimport nodeLogo from './icons/Node_logo.png';\nimport reactLogo from './icons/React_logo.png';\nimport pythonLogo from './icons/Python_logo.png';\nimport dockerLogo from './icons/Docker_logo.png';\n\nimport simIcon from './icons/microscope-icon.svg';\nimport aboutIcon from './icons/about-icon.svg';\nimport worksIcon from './icons/works-icon.svg';\n\nimport faceRecognitionPhoto from './icons/Facial-recognition-photo.png';\nimport reactEtsyPhoto from './icons/react-etsy-photo.png';\nimport parent2piPhoto from './icons/parent2pi-photo.png';\n\nimport resume from './Resume Kyle Caltrider.pdf';\nimport cv from './CV Kyle Caltrider.pdf';\n\n\nconst works = [\n  {\n    name: \"Facial Recognition Demo\",\n    description: \"Python, React, & MongoDB powered facial recognition app. Train a user-unique system to recognize faces within a photo.\",\n    code: <a href=\"https://github.com/KyleCaltrider/face-recognition-api\" target=\"_blank\" rel=\"noopener noreferrer\">Code</a>,\n    live: <a href=\"https://face-recognition-demo.herokuapp.com\" target=\"_blank\" rel=\"noopener noreferrer\">Live</a>,\n    image: <img src={faceRecognitionPhoto} alt=\"Facial Recognition App\" />\n  },\n  {\n    name: \"Parent2PI\",\n    description: \"React, Node, Paypal, & MongoDB powered booking/customer outreach app for Parenting To Promote Independence™\",\n    code: <a href=\"https://github.com/kylecaltrider/parent2pi\" target=\"_blank\" rel=\"noopener noreferrer\">Code</a>,\n    live: <a href=\"https://parent2pi.herokuapp.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Live</a>,\n    image: <img src={parent2piPhoto} alt=\"Parent2PI App\" />\n  },\n  {\n    name: \"React Etsy Store\",\n    description: \"React, Node, Etsy, & MongoDB powered custom Etsy storefront.\",\n    code: <a href=\"https://github.com/KyleCaltrider/etsy-react\" target=\"_blank\" rel=\"noopener noreferrer\">Code</a>,\n    live: <a href=\"https://react-etsy.herokuapp.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Live</a>,\n    image: <img src={reactEtsyPhoto} alt=\"React Etsy Store\" />\n  }\n];\n\nconst strengthsIcons = [{i: jsLogo, label: \"JavaScript\"}, {i: reactLogo, label: \"React\"}, {i: nodeLogo, label: \"Node\"}, {i: pythonLogo, label: \"Python\"}, {i: dockerLogo, label: \"Docker\"}];\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      canvas: null,\n      ctx: null,\n      cells: [],\n      food: null,\n      foodAmount: 100,\n      foodCycle: 30,\n      uv: 10,\n      cellCount: null,\n      simSpeed: 50,\n      cellsLimit: null,\n      hovers: {bannerArrow: false},\n      actives: {nav: false}\n    }\n    this.worker = new WebWorker(CellWorker);\n\n    this.updateSimulation = this.updateSimulation.bind(this);\n    this.updateCanvas = this.updateCanvas.bind(this);\n    this.handleCanvasClick = this.handleCanvasClick.bind(this);\n    this.toggleHover = this.toggleHover.bind(this);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  componentDidMount() {\n    this.initCanvas();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timer);\n    this.worker.terminate();\n  }\n\n  initCanvas() {\n    const canvas = this.refs['canvas'],\n          ctx    = canvas.getContext('2d');\n    \n    this.setState({\n      ctx: ctx,\n      canvas: canvas,\n      timer: setInterval(this.updateSimulation, this.state.simSpeed),\n      cells: this.seedCells(this.state.cellCount, canvas.width, canvas.height),\n      canvasWidth: canvas.width,\n      canvasHeight: canvas.height,\n      food: this.state.foodAmount,\n      cellCount: Math.floor((canvas.width * canvas.height) / 80000),\n      cellsLimit: Math.floor((canvas.width * canvas.height) / 5000)\n    });\n\n    // Worker Listener\n    this.worker.addEventListener('message', updates => {\n      if (!updates) return;\n      updates = updates.data;\n      this.setState(updates);\n      this.updateCanvas(updates);\n      if (updates.cells.length === 0) this.setState({cells: this.seedCells(this.state.cellCount, canvas.width, canvas.height)});\n    })\n  }\n\n  updateSimulation() {\n    const culture = {\n      food: this.state.food,\n      cells: this.state.cells,\n      uv: this.state.uv,\n      canvasWidth: this.state.canvasWidth,\n      canvasHeight: this.state.canvasHeight,\n      foodCycle: this.state.foodCycle,\n      foodAmount: this.state.foodAmount,\n      cellsLimit: this.state.cellsLimit\n    }\n\n    this.worker.postMessage(culture);\n  }\n\n  updateCanvas(updates) {\n    const { ctx, canvas } = this.state;\n    // Clear Canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n        \n    // Draw Background\n\n    // Lamp\n    /*\n    const lamp = ctx.createRadialGradient(canvas.width/2, canvas.height/2, 0, canvas.width/2, canvas.height/2, Math.max(canvas.width, canvas.height) * 0.5);\n    lamp.addColorStop(0, \"rgba(255, 255, 0, 0.05)\");\n    lamp.addColorStop(1, \"rgba(0, 0, 0, 0.05)\");\n    ctx.fillStyle = lamp;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    */\n\n    // Hemocytometer grid\n    const startX = (canvas.width / 2),\n          startY = (canvas.height / 2),\n          gapWidth = Math.min(startX, startY) / 6; \n    ctx.strokeStyle = \"rgba(0, 0, 0, 0.3)\"\n    ctx.beginPath();\n    ctx.moveTo(canvas.width / 2, 0);\n    ctx.lineTo(canvas.width / 2, canvas.height);\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.moveTo(0, canvas.height / 2);\n    ctx.lineTo(canvas.width, canvas.height / 2);\n    ctx.stroke();\n    for (let o = 0; o < 2; o++) {\n      for (let i = 1; i <= 4; i++) {\n        ctx.strokeStyle = i === 4 ? \"rgba(0, 0, 0, 0.3)\" : \"rgba(0, 0, 0, 0.1)\";  \n        if (o === 0) {\n          const da = startX + gapWidth * i,\n                db = startX - gapWidth * i;\n          ctx.beginPath();\n          ctx.moveTo(da, 0);\n          ctx.lineTo(da, canvas.height);\n          ctx.stroke();\n          ctx.beginPath();\n          ctx.moveTo(db, 0);\n          ctx.lineTo(db, canvas.height);\n          ctx.stroke();\n        }\n        else {\n          const da = startY + gapWidth * i,\n                db = startY - gapWidth * i;\n          ctx.beginPath();\n          ctx.moveTo(0, da);\n          ctx.lineTo(canvas.width, da);\n          ctx.stroke();\n          ctx.beginPath();\n          ctx.moveTo(0, db);\n          ctx.lineTo(canvas.width, db);\n          ctx.stroke();\n        }\n      }\n    }\n\n    // Draw Cells\n    updates.cells.forEach(cell => {\n      ctx.strokeStyle = \"rgba(0, 0, 0, 0.5)\"\n\n      // Cell\n      ctx.beginPath();\n      ctx.arc(cell.position[0], cell.position[1], cell.scale * 2, 0, 2 * Math.PI);\n      ctx.fillStyle = `rgba(${cell.color[0]}, ${cell.color[1]}, ${cell.color[2]}, 0.8)`;\n      ctx.stroke();\n      ctx.fill();\n      ctx.closePath();\n      // Nucleus\n      ctx.beginPath();\n      ctx.arc(cell.nucleus[0], cell.nucleus[1], cell.scale / 2, 0, 2 * Math.PI);\n      ctx.fillStyle = `rgba(${cell.nucleusColor[0]}, ${cell.nucleusColor[1]}, ${cell.nucleusColor[2]}, 0.7)`;\n      ctx.fill();\n      ctx.stroke();\n      ctx.closePath();\n    })\n  }\n\n  seedCells(quantity, width, height) {\n    const randomCoordinates = () => {\n      let x = Math.floor(Math.random() * ((width - 20) - 20) + 20),\n          y = Math.floor(Math.random() * ((height - 20) - 20) + 20);\n      return [x, y];\n    }\n    let cells = [];\n    for (let i = 0; i < quantity; i++) {\n      const cell = {\n        energy: 50,\n        speed: Math.floor(Math.random() * (7 - 3) + 3),\n        scale: 5,\n        color: [...Array(3)].map(_ => Math.floor(Math.random() * 266)),   // [255, 70, 144],\n        nucleusColor: [...Array(3)].map(_ => Math.floor(Math.random() * 266)),\n        cyclesAlive: 0,\n        repCycle: 0,\n        position: randomCoordinates(),\n        heading: Math.random() * 2 * Math.PI,\n        id: [...Array(10)].map(_ => Math.floor(Math.random()*10)).join(\"\") + i\n      };\n      cells.push(cell);\n    }\n    return cells;\n  }\n\n  handleCanvasClick(e) {\n   const ne        = e.nativeEvent,\n         pos       = [ne.offsetX, ne.offsetY],\n         { cells } = this.state;\n   this.setState({\n     cells: cells.filter(c => distance(c.position[0], pos[0], c.position[1], pos[1]) > c.scale * 3)\n   });\n\n  }\n\n  toggleHover(key) {\n    const { hovers } = this.state;\n    hovers[key] = !hovers[key];\n    this.setState(hovers);\n  }\n\n  toggleActive(key) {\n    const { actives } = this.state;\n    actives[key] = !actives[key];\n    this.setState(actives);\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n\n        <div id=\"banner-container\" >\n          <div id=\"banner\" >Hello, I'm Kyle</div>\n          <div className=\"arrow-down\" onMouseEnter={() => this.toggleHover(\"bannerArrow\")}\n              onMouseLeave={() => this.toggleHover(\"bannerArrow\")}\n              onClick={() => scroller.scrollTo(\"aboutMe\", {\n                duration: 1000,\n                delay: 50,\n                smooth: true\n              })} >\n            <div className={\"arrowL \" + (this.state.hovers.bannerArrow ? \"hover\" : \"\")} />\n            <div className={\"arrowR \" + (this.state.hovers.bannerArrow ? \"hover\" : \"\")} />\n          </div>\n        </div>\n\n        <Element name=\"aboutMe\" id=\"about-me\">\n          A full-stack web developer and scientist.<br />\n          I am passionate about designing web applications.\n        </Element>\n        \n        <div id=\"strengths\">\n            <h1 id=\"strengths-header\">Strengths</h1>\n            {strengthsIcons.map((icon, i) => {\n              return (\n                <div className=\"strength\" key={\"strength-\"+i}>\n                  <img src={icon['i']} alt={icon.label} />\n                  <h2>{icon['label']}</h2>\n                </div>\n              )\n            })}\n        </div>\n\n        <Element name=\"works\" id=\"works\">\n            <h1>Works</h1>\n            {works.map((work, i) => {\n              return(\n              <div className=\"work\" key={\"work-\"+i}>\n                <h2>{work.name}</h2>\n                {work.image}\n                <p>{work.description}</p>\n                {work.live}\n                {work.code}\n              </div>\n              )\n            })}\n        </Element>\n\n        <div id=\"further-info\">\n          <a className=\"contact\" href=\"mailto: kyle.caltrider@gmail.com\">Get In Touch With Me</a>\n          <a href={resume} download>Resume</a>\n          <a href={cv} download>Curriculum Vitae</a>\n          <p>\n            Biology is a subject that has always fascinated me. As such, I've always wanted to build a cell simulator.\n            The \"cells\" in the background are free to move about the page.\n            They are also subject to aging, growth, energy requirements (food), and random mutations.\n            If conditions are right, they will even reproduce.\n            This React app uses Web Workers and Canvas to seemlesly run the simulation in the background.\n            I hope you enjoy it a much as I did making it.\n          </p>\n          <a className=\"site-code\" href=\"https://github.com/KyleCaltrider/portfolio/tree/master\" target=\"_blank\" rel=\"noopener noreferrer\">Site Code</a>\n        </div>\n\n        <div id=\"nav\">\n          <div id='nav-menu' onClick={() => this.toggleActive('nav')}>Menu</div>\n          <div id='nav-items' className={this.state.actives.nav ? \"active\" : \"\"}>\n            <img src={simIcon} alt=\"simulation\" onClick={() => {\n              scroll.scrollToTop();\n              this.toggleActive('nav');\n              }} />\n            <img src={aboutIcon} alt=\"about\" onClick={() => {\n              scroller.scrollTo('aboutMe', {\n                duration: 1000,\n                delay: 50,\n                smooth: true\n              });\n              this.toggleActive('nav');\n            }} />\n            <img src={worksIcon} alt=\"works\" onClick={() => {\n              scroller.scrollTo('works', {\n                duration: 1000,\n                delay: 50,\n                smooth: true\n              });\n              this.toggleActive('nav');\n            }}/>\n          </div>\n        </div>\n\n        <div id=\"simulation-container\" >\n          <canvas ref=\"canvas\"\n                  width={window.innerWidth}\n                  height={window.innerHeight}\n                  onClick={this.handleCanvasClick} />\n        </div>\n\n      </div>\n    );\n  }\n}\n\nfunction distance(x1, x2, y1, y2) {\n  return Math.sqrt(Math.pow(Math.abs(x1 - x2), 2) + Math.pow(Math.abs(y1 - y2), 2))\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}